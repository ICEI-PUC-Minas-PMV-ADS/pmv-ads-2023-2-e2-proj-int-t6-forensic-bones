// <auto-generated />
using Forensic_Bones.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forensic_Bones.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230927010602_M01AddTables")]
    partial class M01AddTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forensic_Bones.Models.FotoAchado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("InventEsqueletoId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("InventEsqueletoId");

                    b.ToTable("FotografiasAchados");
                });

            modelBuilder.Entity("Forensic_Bones.Models.FotoEsqueleto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("InventEsqueletoId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("InventEsqueletoId");

                    b.ToTable("FotografiasEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventCranio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartilagemDaTireoide")
                        .HasColumnType("int");

                    b.Property<int>("ConchaNasalInferiorDireita")
                        .HasColumnType("int");

                    b.Property<int>("ConchaNasalInferiorEsquerda")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Esfenoide")
                        .HasColumnType("int");

                    b.Property<int>("Etmoide")
                        .HasColumnType("int");

                    b.Property<int>("EtmoideEsquerdo")
                        .HasColumnType("int");

                    b.Property<int>("Frontal")
                        .HasColumnType("int");

                    b.Property<int>("Hioide")
                        .HasColumnType("int");

                    b.Property<int>("InventEsqueletoId")
                        .HasColumnType("int");

                    b.Property<int>("LacrimalDireito")
                        .HasColumnType("int");

                    b.Property<int>("LacrimalEsquerdo")
                        .HasColumnType("int");

                    b.Property<int>("Mandibula")
                        .HasColumnType("int");

                    b.Property<int>("Maxilar")
                        .HasColumnType("int");

                    b.Property<int>("NasalEsquerdo")
                        .HasColumnType("int");

                    b.Property<int>("Ocipital")
                        .HasColumnType("int");

                    b.Property<int>("Palatino")
                        .HasColumnType("int");

                    b.Property<int>("ParietalDireito")
                        .HasColumnType("int");

                    b.Property<int>("ParietalEsquerdo")
                        .HasColumnType("int");

                    b.Property<int>("TemporalDireito")
                        .HasColumnType("int");

                    b.Property<int>("TemporalEsquerdo")
                        .HasColumnType("int");

                    b.Property<int>("Vomer")
                        .HasColumnType("int");

                    b.Property<int>("ZigomaticoDireito")
                        .HasColumnType("int");

                    b.Property<int>("ZigomaticoEsquerdo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventEsqueletoId");

                    b.ToTable("InventarioCranio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventEsqueleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeDeOssos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventarioEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.MarcadorCranio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaGlabela")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CristalNucal")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EminenciaMentoniana")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("InventCranioId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoMastoide")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SupraOrbital")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("InventCranioId");

                    b.ToTable("MarcadoresCranio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Forensic_Bones.Models.FotoAchado", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventEsqueleto", "InventEsqueleto")
                        .WithMany()
                        .HasForeignKey("InventEsqueletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.FotoEsqueleto", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventEsqueleto", "InventEsqueleto")
                        .WithMany()
                        .HasForeignKey("InventEsqueletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventCranio", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventEsqueleto", "InventEsqueleto")
                        .WithMany()
                        .HasForeignKey("InventEsqueletoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.MarcadorCranio", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventCranio", "InventCranio")
                        .WithMany()
                        .HasForeignKey("InventCranioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventCranio");
                });
#pragma warning restore 612, 618
        }
    }
}
