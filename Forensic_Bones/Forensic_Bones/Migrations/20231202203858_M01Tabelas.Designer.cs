// <auto-generated />
using System;
using Forensic_Bones.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forensic_Bones.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231202203858_M01Tabelas")]
    partial class M01Tabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forensic_Bones.Models.InventarioCranio", b =>
                {
                    b.Property<int>("InventarioCranioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioCranioId"));

                    b.Property<int>("CartilagemTireoide")
                        .HasColumnType("int");

                    b.Property<string>("CartilagemTireoideDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConchaNasalDir")
                        .HasColumnType("int");

                    b.Property<string>("ConchaNasalDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConchaNasalEsq")
                        .HasColumnType("int");

                    b.Property<string>("ConchaNasalEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Esfenoide")
                        .HasColumnType("int");

                    b.Property<string>("EsfenoideDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtmoideDir")
                        .HasColumnType("int");

                    b.Property<string>("EtmoideDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtmoideEsq")
                        .HasColumnType("int");

                    b.Property<string>("EtmoideEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoCranio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frontal")
                        .HasColumnType("int");

                    b.Property<string>("FrontalDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hioide")
                        .HasColumnType("int");

                    b.Property<string>("HioideDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventarioEsqueletoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InventarioEsqueletoId1")
                        .HasColumnType("int");

                    b.Property<int>("LacrimalDir")
                        .HasColumnType("int");

                    b.Property<string>("LacrimalDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LacrimalEsq")
                        .HasColumnType("int");

                    b.Property<string>("LacrimalEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mandibula")
                        .HasColumnType("int");

                    b.Property<string>("MandibulaDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maxilar")
                        .HasColumnType("int");

                    b.Property<string>("MaxilarDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NasalEsq")
                        .HasColumnType("int");

                    b.Property<string>("NasalEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocipital")
                        .HasColumnType("int");

                    b.Property<string>("OcipitalDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParietalDir")
                        .HasColumnType("int");

                    b.Property<string>("ParietalDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParietalEsq")
                        .HasColumnType("int");

                    b.Property<string>("ParietalEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatorioId")
                        .HasColumnType("int");

                    b.Property<int>("TemporalDir")
                        .HasColumnType("int");

                    b.Property<string>("TemporalDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemporalEsq")
                        .HasColumnType("int");

                    b.Property<string>("TemporalEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vomer")
                        .HasColumnType("int");

                    b.Property<string>("VomerDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZigomaticoDir")
                        .HasColumnType("int");

                    b.Property<string>("ZigomaticoDirDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZigomaticoEsq")
                        .HasColumnType("int");

                    b.Property<string>("ZigomaticoEsqDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventarioCranioId");

                    b.HasIndex("InventarioEsqueletoId1");

                    b.HasIndex("RelatorioId");

                    b.ToTable("InventariosCranio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventarioEsqueleto", b =>
                {
                    b.Property<int>("InventarioEsqueletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventarioEsqueletoId"));

                    b.Property<string>("FotoEsqueleto")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacoesEsq")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("RelatorioId")
                        .HasColumnType("int");

                    b.HasKey("InventarioEsqueletoId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("InventariosEsqueleto");
                });

            modelBuilder.Entity("Forensic_Bones.Models.MarcadoresCranio", b =>
                {
                    b.Property<int>("MarcadoresCranioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcadoresCranioId"));

                    b.Property<string>("AreaGlabela")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CristaNucal")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EminenciaMentoniana")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("InventarioCranioId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessoMastoide")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("RelatorioId")
                        .HasColumnType("int");

                    b.Property<string>("SupraOrbital")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("MarcadoresCranioId");

                    b.HasIndex("InventarioCranioId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("MarcadoresCranio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.Relatorio", b =>
                {
                    b.Property<int>("RelatorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelatorioId"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RelatorioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("Forensic_Bones.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Cargo")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventarioCranio", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventarioEsqueleto", "InventarioEsqueleto")
                        .WithMany("InventarioCranio")
                        .HasForeignKey("InventarioEsqueletoId1");

                    b.HasOne("Forensic_Bones.Models.Relatorio", "Relatorio")
                        .WithMany("InventarioCranio")
                        .HasForeignKey("RelatorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventarioEsqueleto");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventarioEsqueleto", b =>
                {
                    b.HasOne("Forensic_Bones.Models.Relatorio", "Relatorio")
                        .WithMany("InventariosEsqueleto")
                        .HasForeignKey("RelatorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.MarcadoresCranio", b =>
                {
                    b.HasOne("Forensic_Bones.Models.InventarioCranio", "InventarioCranio")
                        .WithMany()
                        .HasForeignKey("InventarioCranioId");

                    b.HasOne("Forensic_Bones.Models.Relatorio", "Relatorio")
                        .WithMany("MarcadoresCranio")
                        .HasForeignKey("RelatorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventarioCranio");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.Relatorio", b =>
                {
                    b.HasOne("Forensic_Bones.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Forensic_Bones.Models.InventarioEsqueleto", b =>
                {
                    b.Navigation("InventarioCranio");
                });

            modelBuilder.Entity("Forensic_Bones.Models.Relatorio", b =>
                {
                    b.Navigation("InventarioCranio");

                    b.Navigation("InventariosEsqueleto");

                    b.Navigation("MarcadoresCranio");
                });
#pragma warning restore 612, 618
        }
    }
}
